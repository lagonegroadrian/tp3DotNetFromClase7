// <auto-generated />
using Clase7;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Clase7.Migrations
{
    [DbContext(typeof(MyContext))]
    [Migration("20211119012317_inicial")]
    partial class inicial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.6")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Clase7.DNI", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("num_usr")
                        .HasColumnType("int");

                    b.Property<int>("numero")
                        .HasColumnType("int");

                    b.Property<int>("tramite")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("num_usr")
                        .IsUnique();

                    b.ToTable("dni");

                    b.HasData(
                        new
                        {
                            id = 1,
                            num_usr = 1,
                            numero = 111,
                            tramite = 111
                        },
                        new
                        {
                            id = 2,
                            num_usr = 2,
                            numero = 222,
                            tramite = 222
                        },
                        new
                        {
                            id = 3,
                            num_usr = 3,
                            numero = 333,
                            tramite = 333
                        },
                        new
                        {
                            id = 4,
                            num_usr = 4,
                            numero = 444,
                            tramite = 444
                        },
                        new
                        {
                            id = 5,
                            num_usr = 5,
                            numero = 555,
                            tramite = 555
                        });
                });

            modelBuilder.Entity("Clase7.Domicilio", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("altura")
                        .HasColumnType("int");

                    b.Property<string>("calle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("num_usr")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("num_usr");

                    b.ToTable("Domicilios");

                    b.HasData(
                        new
                        {
                            id = 1,
                            altura = 1,
                            calle = "9 de Julio",
                            num_usr = 1
                        },
                        new
                        {
                            id = 2,
                            altura = 1,
                            calle = "Cerrito",
                            num_usr = 1
                        },
                        new
                        {
                            id = 3,
                            altura = 1,
                            calle = "Santa Fe",
                            num_usr = 2
                        },
                        new
                        {
                            id = 4,
                            altura = 1,
                            calle = "Florida",
                            num_usr = 2
                        },
                        new
                        {
                            id = 5,
                            altura = 1,
                            calle = "Alcorta",
                            num_usr = 2
                        },
                        new
                        {
                            id = 6,
                            altura = 1,
                            calle = "Las Heras",
                            num_usr = 3
                        },
                        new
                        {
                            id = 7,
                            altura = 1,
                            calle = "Callao",
                            num_usr = 4
                        },
                        new
                        {
                            id = 8,
                            altura = 1,
                            calle = "Rivadavia",
                            num_usr = 5
                        });
                });

            modelBuilder.Entity("Clase7.Pais", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("nombre")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("Paises");

                    b.HasData(
                        new
                        {
                            id = 1,
                            nombre = "Argentina"
                        },
                        new
                        {
                            id = 2,
                            nombre = "Uruguay"
                        },
                        new
                        {
                            id = 3,
                            nombre = "Chile"
                        },
                        new
                        {
                            id = 4,
                            nombre = "Brasil"
                        },
                        new
                        {
                            id = 5,
                            nombre = "Paraguay"
                        });
                });

            modelBuilder.Entity("Clase7.Usuario", b =>
                {
                    b.Property<int>("num_usr")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("bloqueado")
                        .HasColumnType("bit");

                    b.Property<bool>("esADM")
                        .HasColumnType("bit");

                    b.Property<string>("mail")
                        .HasColumnType("varchar(512)");

                    b.Property<string>("nombre")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("password")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("segundo_nombre")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("num_usr");

                    b.ToTable("Usuarios");

                    b.HasData(
                        new
                        {
                            num_usr = 1,
                            bloqueado = false,
                            esADM = true,
                            mail = "111@111",
                            nombre = "111",
                            password = "111"
                        },
                        new
                        {
                            num_usr = 2,
                            bloqueado = true,
                            esADM = true,
                            mail = "222@222",
                            nombre = "222",
                            password = "222"
                        },
                        new
                        {
                            num_usr = 3,
                            bloqueado = true,
                            esADM = false,
                            mail = "333@333",
                            nombre = "333",
                            password = "333"
                        },
                        new
                        {
                            num_usr = 4,
                            bloqueado = false,
                            esADM = false,
                            mail = "444@444",
                            nombre = "444",
                            password = "444"
                        },
                        new
                        {
                            num_usr = 5,
                            bloqueado = false,
                            esADM = true,
                            mail = "555@555",
                            nombre = "555",
                            password = "555"
                        });
                });

            modelBuilder.Entity("Clase7.UsuarioPais", b =>
                {
                    b.Property<int>("num_usr")
                        .HasColumnType("int");

                    b.Property<int>("id")
                        .HasColumnType("int");

                    b.HasKey("num_usr", "id");

                    b.HasIndex("id");

                    b.ToTable("UsuarioPais");
                });

            modelBuilder.Entity("PaisUsuario", b =>
                {
                    b.Property<int>("Nacionalidadid")
                        .HasColumnType("int");

                    b.Property<int>("usersnum_usr")
                        .HasColumnType("int");

                    b.HasKey("Nacionalidadid", "usersnum_usr");

                    b.HasIndex("usersnum_usr");

                    b.ToTable("PaisUsuario");
                });

            modelBuilder.Entity("Clase7.DNI", b =>
                {
                    b.HasOne("Clase7.Usuario", "user")
                        .WithOne("dni")
                        .HasForeignKey("Clase7.DNI", "num_usr")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("user");
                });

            modelBuilder.Entity("Clase7.Domicilio", b =>
                {
                    b.HasOne("Clase7.Usuario", "user")
                        .WithMany("domicilios")
                        .HasForeignKey("num_usr")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("user");
                });

            modelBuilder.Entity("Clase7.UsuarioPais", b =>
                {
                    b.HasOne("Clase7.Pais", "pais")
                        .WithMany("UserPais")
                        .HasForeignKey("id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Clase7.Usuario", "user")
                        .WithMany("UserPais")
                        .HasForeignKey("num_usr")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("pais");

                    b.Navigation("user");
                });

            modelBuilder.Entity("PaisUsuario", b =>
                {
                    b.HasOne("Clase7.Pais", null)
                        .WithMany()
                        .HasForeignKey("Nacionalidadid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Clase7.Usuario", null)
                        .WithMany()
                        .HasForeignKey("usersnum_usr")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Clase7.Pais", b =>
                {
                    b.Navigation("UserPais");
                });

            modelBuilder.Entity("Clase7.Usuario", b =>
                {
                    b.Navigation("dni");

                    b.Navigation("domicilios");

                    b.Navigation("UserPais");
                });
#pragma warning restore 612, 618
        }
    }
}
